<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>5.1.11 on MAN.IN.BLOG</title>
    <link>http://onori.github.io/tags/5.1/index.11/</link>
    <description>Recent content in 5.1.11 on MAN.IN.BLOG</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>All rights reserved - 2015</copyright>
    <lastBuildDate>Thu, 22 Oct 2015 16:00:18 +0900</lastBuildDate>
    <atom:link href="http://onori.github.io/tags/5.1.11/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>laravel policyのハマりどころ</title>
      <link>http://onori.github.io/post/laravel-policy/</link>
      <pubDate>Thu, 22 Oct 2015 16:00:18 +0900</pubDate>
      
      <guid>http://onori.github.io/post/laravel-policy/</guid>
      <description>

&lt;h2 id=&#34;authorization&#34;&gt;authorization&lt;/h2&gt;

&lt;p&gt;Laravel5.11からauthorization（認可）が追加されたよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://laravel.com/docs/5.1/authorization&#34;&gt;http://laravel.com/docs/5.1/authorization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://readouble.com/laravel/5/1/ja/authorization.html&#34;&gt;http://readouble.com/laravel/5/1/ja/authorization.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;使い方は簡単なので上で見てね！！！&lt;br /&gt;
使い方の説明じゃないよ！！クソなハマりポイントの解説だよ！！！&lt;/p&gt;

&lt;p&gt;これでLaravelでもデフォルトでACLが出来るよ！&lt;br /&gt;
やったねタエちゃん！！&lt;/p&gt;

&lt;h2 id=&#34;controllerとpolicyとのひも付け&#34;&gt;ControllerとPolicyとのひも付け&lt;/h2&gt;

&lt;p&gt;AuthServiceProviderにモデルとポリシーファイルとを紐付けるよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;AuthServiceProvider.php
&lt;code&gt;
protected $policies = [
&#39;App\Measure&#39; =&amp;gt; &#39;App\Policies\MeasurePolicy&#39;,
]
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ポリシーファイルはartisanコマンドから生成できるよ！&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ php artisan make:policy MeasurePolicy
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ポリシーファイルに制限規則を記述するよ！&lt;br /&gt;
&lt;code&gt;true&lt;/code&gt; が返れば処理は正常に続行されるよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MeasurePolicy.php
&lt;code&gt;
public function show(User $user, Customer $customer)
{
return $user-&amp;gt;bureau_id === $customer-&amp;gt;measure-&amp;gt;bureau-&amp;gt;id;
}
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;コントローラーとポリシーのメソッド名は自動で紐づくんだって！&lt;br /&gt;
かしこいね！！&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;ポリシーのメソッドはコントローラーのメソッドと頻繁に対応します。たとえば前記のupdateメソッドのように、updateと言う名前がコントローラーメソッドとポリシーメソッドで共通です。そのため、Laravelはauthorizeメソッドの引数にインスタンスだけを渡すことも許しています。認可するアビリティは呼び出しているメソッドの名前を元に自動的に決められます。この例では、コントローラーのupdateメソッドからauthorizeが呼びだされていますから、PostPolicy上でもupdateメソッドが呼びだされます。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;MeasureController&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;public function create($id)
{
    $customer = Customer::find(1);
    $this-&amp;gt;authorize($customer);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;その結果&amp;hellip;&lt;br /&gt;
↓  ↓  ↓  ↓&lt;/p&gt;

&lt;p&gt;＿人人人人人人＿&lt;br /&gt;
＞　突然の死　＜&lt;br /&gt;
￣Y^Y^Y^Y^Y￣&lt;/p&gt;

&lt;h3 id=&#34;なぜなのか&#34;&gt;なぜなのか？&lt;/h3&gt;

&lt;p&gt;ポリシーファイルが暗黙的にコントローラメソッドと連携する場合、&lt;br /&gt;
&lt;strong&gt;第二引数のインスタンスに紐づくポリシー&lt;/strong&gt; が適用されるよ！&lt;br /&gt;
つまり上の例だと、&lt;code&gt;CustomerPolicy&lt;/code&gt; の&lt;code&gt;create&lt;/code&gt;メソッドが呼ばれてることになるよ！&lt;/p&gt;

&lt;p&gt;&lt;code&gt;ほんと死ねばいいのにね！！！！！！！！！！&lt;/code&gt;&lt;/p&gt;

&lt;h3 id=&#34;回避方法&#34;&gt;回避方法&lt;/h3&gt;

&lt;p&gt;第二引数のインスタンスから取得するので、第二引数に（たとえPolicy内で使わないとしても）その &lt;strong&gt;コントローラーに紐付いてるモデルインスタンス&lt;/strong&gt; を投げるよ！！！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MeasureController.php
&lt;code&gt;
public function create($id)
{
$customer = Customer::find(1);
$this-&amp;gt;authorize([new Exchange(), $customer]);
}
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;ポリシー側も変更するよ！&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;MeasurePolicy.php
&lt;code&gt;
public function show(User $user, Measure $measure, Customer $customer)
{
return $user-&amp;gt;bureau_id === $customer-&amp;gt;measure-&amp;gt;bureau-&amp;gt;id;
}
&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;code&gt;(*^◯^*) これで動くんだ！&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;ちなみにコントローラー側から authorize関数の引数に2つ以上のインスタンスを渡す時は、&lt;strong&gt;配列&lt;/strong&gt; にして渡すんだ！わかりづらいんだ！！死ねばいいのに！！&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>